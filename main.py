from aiogram import Bot, Dispatcher, F
import logging
import asyncio
from aiogram.filters import Command, StateFilter
from aiogram_calendar.simple_calendar import SimpleCalendarCallback

from core.handlers.micro_services.product_feed import *
from core.handlers.micro_services.cart import *

from core.handlers.user_levels.admin_user import *
from core.handlers.user_levels.seller_user import *
from core.handlers.user_levels.customer_user import *

from core.handlers.general_handlers import starting_work

from core.settings import settings

async def start():
    logging.basicConfig(level=logging.INFO)
    bot = Bot(token=settings.bots.bot_token)
    dp = Dispatcher()

    #–û–±—â–∏–µ
    dp.message.register(starting_work, Command("start"))
    dp.message.register(starting_work, F.text=='üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫')
    dp.message.register(starting_work, F.text=='‚óÄÔ∏è –ù–∞–∑–∞–¥',
                        StateFilter(Seller.prod_name_st))
    dp.message.register(starting_work, F.text=='‚óÄÔ∏è –ù–∞–∑–∞–¥',
                        StateFilter(Admin.admin_mailing))

    #–ü—Ä–æ–¥–∞–≤–µ—Ü
    dp.message.register(instruction, F.text=='üìò –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è',
                        StateFilter(Seller.seller_start))
    dp.message.register(show_feed, F.text=='üìú –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–µ–Ω—Ç—É –º–æ–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤',
                        StateFilter(Seller.seller_start))
    
    dp.message.register(check_requests, F.text=='üìù –ó–∞—è–≤–∫–∏',
                        StateFilter(Seller.seller_start))
    dp.message.register(leave_requests, F.text=='üö™ –í—ã–π—Ç–∏',
                        StateFilter(Seller.check_requests_st))
    dp.callback_query.register(apply_requests,
                        Seller.check_requests_st, F.data.startswith('request:'))
    #–ü—Ä–æ–¥–∞–≤–µ—Ü, –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞
    dp.message.register(write_prod_name, F.text=='üì¶ –†–∞–∑–º–µ—Å—Ç–∏—Ç—å —Ç–æ–≤–∞—Ä',
                        StateFilter(Seller.seller_start))
    dp.message.register(write_prod_name, F.text=='‚óÄÔ∏è –ù–∞–∑–∞–¥',
                        StateFilter(Seller.prod_desc_st))
    dp.message.register(write_prod_name, F.text=='‚ùå –ü–µ—Ä–µ–¥–µ–ª–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é',
                        StateFilter(Seller.prod_card_complete_st))

    dp.message.register(write_prod_desc, F.text,
                        StateFilter(Seller.prod_name_st))
    dp.message.register(write_prod_desc, F.text=='‚óÄÔ∏è –ù–∞–∑–∞–¥',
                        StateFilter(Seller.prod_photo_st))

    dp.message.register(download_prod_photo, F.text,
                        StateFilter(Seller.prod_desc_st))
    dp.message.register(download_prod_photo, F.text=='‚óÄÔ∏è –ù–∞–∑–∞–¥',
                        StateFilter(Seller.prod_unit_st))

    dp.message.register(choose_prod_unit, F.photo,
                        StateFilter(Seller.prod_photo_st))
    dp.message.register(choose_prod_unit, F.text=='‚óÄÔ∏è –ù–∞–∑–∞–¥',
                        StateFilter(Seller.prod_availability_st))

    dp.callback_query.register(write_prod_availability,
                        Seller.prod_unit_st, F.data.startswith('unit:'))
    dp.message.register(write_prod_availability, F.text=='‚óÄÔ∏è –ù–∞–∑–∞–¥',
                        StateFilter(Seller.prod_price_st))
    
    dp.message.register(write_prod_price, F.text,
                        StateFilter(Seller.prod_availability_st))
    dp.message.register(write_prod_price, F.text=='‚óÄÔ∏è –ù–∞–∑–∞–¥',
                        StateFilter(Seller.prod_card_complete_st))
    
    dp.message.register(product_card_complete, F.text,
                        StateFilter(Seller.prod_price_st))

    dp.message.register(product_card_write, F.text=='‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ',
                        StateFilter(Seller.prod_card_complete_st))
    
    #–ê–¥–º–∏–Ω
    dp.message.register(instruction, F.text=='üìò –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è',
                        StateFilter(Admin.admin_start))
    dp.message.register(invite_link, F.text=='üîë –°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ',
                        StateFilter(Admin.admin_start))
    dp.message.register(show_feed, F.text=='üìú –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–µ–Ω—Ç—É —Ç–æ–≤–∞—Ä–æ–≤',
                        StateFilter(Admin.admin_start))
    dp.message.register(give_google_sheets_link, F.text=='üîó –°—Å—ã–ª–∫–∞ –Ω–∞ GoogleSheets',
                        StateFilter(Admin.admin_start))
    
    dp.message.register(mailing, F.text=='üì§ –†–∞—Å—Å—ã–ª–∫–∞',
                        StateFilter(Admin.admin_start))
    dp.message.register(mailing, F.text=='‚óÄÔ∏è –ù–∞–∑–∞–¥',
                        StateFilter(Admin.admin_mailing_choose))
    dp.message.register(choose_adressees, F.text, StateFilter(Admin.admin_mailing))
    dp.callback_query.register(send_adressees, Admin.admin_mailing_choose,
                               F.data.startswith("adr:"))
    
     #–ü–æ–∫—É–ø–∞—Ç–µ–ª—å
    dp.message.register(show_feed, F.text=='üìú –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–µ–Ω—Ç—É —Ç–æ–≤–∞—Ä–æ–≤',
                        StateFilter(Customer.customer_start))
    dp.message.register(show_cart, F.text=='üõí –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ—Ä–∑–∏–Ω—É',
                        StateFilter(Customer.customer_start))
    dp.message.register(instruction, F.text=='üìò –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è',
                        StateFilter(Customer.customer_start))

    #–õ–µ–Ω—Ç–∞ —Ç–æ–≤–∞—Ä–æ–≤
    dp.message.register(show_feed, F.text=='üîΩ –ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ',
                        StateFilter(ProductFeed.product_feed))
    dp.message.register(close_feed, F.text=='üö™ –í—ã–π—Ç–∏',
                        StateFilter(ProductFeed.product_feed))
    dp.callback_query.register(write_to_cart, F.data.startswith("add_to_cart:"),
                        StateFilter(ProductFeed.product_feed))
    dp.callback_query.register(delete_feed_item, F.data.startswith("del_from_feed:"),
                        StateFilter(ProductFeed.product_feed))
    dp.message.register(back_to_feed, F.text=='‚ùå –û—Ç–º–µ–Ω–∞',
                        StateFilter(ProductFeed.choose_quantity))
    dp.message.register(check_and_choose_date, ProductFeed.choose_quantity)
    dp.callback_query.register(add_to_cart, SimpleCalendarCallback.filter(),
                               StateFilter(ProductFeed.choosing_date))

    #–ö–æ—Ä–∑–∏–Ω–∞    
    dp.callback_query.register(edit_cart_item_quantity, F.data.startswith("edit_cart:"),
                        StateFilter(Cart.cart))
    dp.message.register(back_to_cart, F.text=='‚ùå –û—Ç–º–µ–Ω–∞',
                        StateFilter(Cart.choose_quantity))
    dp.message.register(write_new_quantity, Cart.choose_quantity)
    dp.callback_query.register(delete_cart_item, F.data.startswith("del_cart:"),
                        StateFilter(Cart.cart))
    dp.message.register(purchase, F.text == '‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑',
                               StateFilter(Cart.cart))
    dp.message.register(close_cart, F.text == 'üö™ –í—ã–π—Ç–∏',
                               StateFilter(Cart.cart)) 
    

    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(start())